# Generated by Django 4.0.4 on 2022-05-12 09:42

import APIs.validators
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20, verbose_name='성명')),
                ('quantity', models.IntegerField(verbose_name='수량')),
                ('size', models.CharField(choices=[('L', 'Large'), ('S', 'Small'), ('M', 'Medium')], max_length=10, null='True', verbose_name='사이즈')),
                ('receive', models.CharField(max_length=10, verbose_name='수령방법')),
                ('address', models.CharField(blank='True', max_length=50, null='True', verbose_name='주소')),
                ('color', models.CharField(choices=[('purple', 'Purple'), ('red', 'Red'), ('beige', 'Beige')], max_length=20, null='True', verbose_name='색상')),
                ('req', models.TextField(blank='True', null='True', verbose_name='요청사항')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='신청날짜')),
            ],
            options={
                'verbose_name': '신청',
                'verbose_name_plural': '신청',
                'db_table': 'apply',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='상품명')),
                ('quantity', models.IntegerField(verbose_name='모집인원')),
                ('due_date', models.DateTimeField(verbose_name='모집기간')),
                ('price', models.IntegerField(verbose_name='상품가격')),
                ('description', models.TextField(verbose_name='상품설명')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product/')),
                ('tag', models.CharField(max_length=20, verbose_name='태그')),
                ('kakao_link', models.TextField(verbose_name='오픈카톡')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록날짜')),
            ],
            options={
                'verbose_name': '상품',
                'verbose_name_plural': '상품',
                'db_table': 'products_product',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='제목')),
                ('content', models.TextField(verbose_name='내용')),
                ('image', models.ImageField(blank=True, null=True, upload_to='review/')),
                ('category', models.CharField(max_length=20, verbose_name='카테고리')),
                ('store', models.CharField(max_length=20, verbose_name='업체')),
                ('delivery', models.IntegerField(verbose_name='배송기간')),
                ('price', models.IntegerField(verbose_name='가격')),
                ('satisfaction', models.CharField(choices=[('4', '4'), ('3', '3'), ('1', '1'), ('5', '5'), ('2', '2')], max_length=10, verbose_name='만족도')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록날짜')),
            ],
            options={
                'verbose_name': '리뷰',
                'verbose_name_plural': '리뷰',
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': '학교 이메일이 아닙니다.'}, max_length=50, unique=True, validators=[APIs.validators.validate_hufs_email], verbose_name='이메일')),
                ('nickname', models.CharField(error_messages={'unique': '이미 사용중인 닉네임입니다.'}, max_length=15, null=True, unique=True, validators=[APIs.validators.validate_no_special_characters], verbose_name='닉네임')),
                ('kakaoId', models.CharField(max_length=50, unique=True, verbose_name='카카오톡 ID')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='제목')),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
            ],
            options={
                'verbose_name': '게시글',
                'verbose_name_plural': '게시글',
                'db_table': 'post',
            },
        ),
    ]
